@startuml
!theme plain
title "Fluxo de Segurança: Autenticação e Autorização no Portal Web"

box "Portal Web" #LightBlue
actor "Usuário" as User
participant "Frontend (SPA)" as Frontend
end box

box "Backend Services" #LightGreen
participant "API Gateway" as APIGateway
participant "Serviço de Autenticação" as AuthService
participant "Serviço de Aplicação" as AppService
database "Banco de Dados" as DB
end box

== Autenticação e Autorização no Portal Web (JWT & RBAC) ==

User -> Frontend: Fornece credenciais (e-mail/senha)
Frontend -> AuthService: POST /api/auth/login com credenciais

activate AuthService
AuthService -> DB: Valida credenciais (SELECT com hash)
activate DB
DB --> AuthService: Credenciais válidas
deactivate DB

AuthService -> AuthService: Gera Access Token (15m) e Refresh Token (7d)
AuthService --> Frontend: Retorna { accessToken, refreshToken }
deactivate AuthService

Frontend -> Frontend: Armazena Access Token em memória e Refresh Token em cookie HttpOnly

... Requisições Autenticadas ...

User -> Frontend: Acessa uma rota protegida
Frontend -> APIGateway: GET /api/recurso-protegido
note right of Frontend: Header com o AccessToken

activate APIGateway
APIGateway -> AppService: Encaminha requisição
deactivate APIGateway

activate AppService
AppService -> AppService: **Middleware RBAC** decodifica JWT e verifica o "role" do usuário
note right
  O payload do JWT contém o papel,
  ex: "role": "admin_concessionaria"
end note
AppService --> Frontend: Retorna o recurso solicitado (200 OK)
deactivate AppService

... Expiração do Access Token ...

Frontend -> APIGateway: GET /api/recurso-protegido
note right of Frontend: Header com o AccessToken Expirado
APIGateway --> Frontend: Responde com 401 Unauthorized

Frontend -> AuthService: POST /api/auth/refresh com Refresh Token (do cookie)
activate AuthService
AuthService -> AuthService: Valida Refresh Token
AuthService --> Frontend: Retorna { newAccessToken }
deactivate AuthService
Frontend -> Frontend: Armazena novo Access Token em memória
Frontend -> APIGateway: Re-tenta GET /api/recurso-protegido com o novo Access Token

@enduml
