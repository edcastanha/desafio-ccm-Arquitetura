{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Projeto de Prova de Conceito (POC) de Arquitetura de Sistema e Solu\u00e7\u00e3o","text":"<p>Data de In\u00edcio: 22 de julho de 2025, 18:17h</p> <p>Autor: Edson Louren\u00e7o Bezerra Filho</p> <p>Este projeto foi desenvolvido como uma Prova de Conceito (POC) para demonstrar minhas habilidades na concep\u00e7\u00e3o de  arquiteturas de sistema e solu\u00e7\u00e3o . Ele foi cuidadosamente  baseado e orientado pelo Modelo C4 e por Diagramas de Sequ\u00eancia , com todas as representa\u00e7\u00f5es visuais criadas utilizando  PlantUML . Para agilizar e padronizar o processo, utilizei a biblioteca C4-PlantUML como refer\u00eancia e base de apoio, dispon\u00edvel em: https://github.com/plantuml-stdlib/C4-PlantUML/blob/master/README.md.</p>"},{"location":"#documentacao-de-arquitetura","title":"Documenta\u00e7\u00e3o de Arquitetura","text":"<p>Este projeto inclui uma  documenta\u00e7\u00e3o de arquitetura detalhada , organizada para facilitar a compreens\u00e3o e futura manuten\u00e7\u00e3o. Voc\u00ea encontrar\u00e1 os seguintes artefatos principais:</p>"},{"location":"#registros-de-decisao-de-arquitetura-adrs","title":"Registros de Decis\u00e3o de Arquitetura (ADRs)","text":"<ul> <li>ADR-001: Escolha da Arquitetura H\u00edbrida (Microservi\u00e7os + Orientada a Eventos/Serverless)</li> </ul>"},{"location":"#diagramas-c4-model","title":"Diagramas C4 Model","text":""},{"location":"#diagramas-de-contexto","title":"Diagramas de Contexto","text":"<ul> <li>Diagrama de Contexto do Sistema de Integra\u00e7\u00e3o de CRMs - CCM (PUML)</li> <li></li> </ul>"},{"location":"#diagramas-de-conteineres","title":"Diagramas de Cont\u00eaineres","text":"<ul> <li>Diagrama de Cont\u00eaineres do Sistema de Integra\u00e7\u00e3o (PUML)</li> <li></li> </ul>"},{"location":"#diagramas-de-componentes","title":"Diagramas de Componentes","text":"<ul> <li>Componente de Gest\u00e3o de Tokens de API (PUML)</li> <li></li> <li>Componente do Portal Web (PUML)</li> <li></li> </ul>"},{"location":"#diagramas-de-sequencia","title":"Diagramas de Sequ\u00eancia","text":"<ul> <li>Fluxo de Atualiza\u00e7\u00e3o de Oportunidade (PUML)</li> <li></li> <li>Fluxo de Distribui\u00e7\u00e3o de Leads (PUML)</li> <li></li> <li>Fluxo de Seguran\u00e7a: Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o no Portal Web (PUML)</li> <li></li> <li>Fluxo de Seguran\u00e7a: Autentica\u00e7\u00e3o de Webhooks (PUML)</li> <li></li> </ul>"},{"location":"fluxo-de-dados/","title":"Documento de Fluxo de Dados","text":"<p>Este documento detalha os fluxos de dados para as principais integra\u00e7\u00f5es do sistema, conforme definido no ADR-001: Escolha da Arquitetura H\u00edbrida. A arquitetura utiliza uma abordagem orientada a eventos para garantir desacoplamento, resili\u00eancia e escalabilidade.</p>"},{"location":"fluxo-de-dados/#1-fluxo-de-distribuicao-de-leads-montadora-concessionaria","title":"1. Fluxo de Distribui\u00e7\u00e3o de Leads (Montadora -&gt; Concession\u00e1ria)","text":"<p>Este fluxo descreve como um novo lead capturado no Zoho CRM da montadora \u00e9 automaticamente distribu\u00eddo para o CRM de uma concession\u00e1ria.</p> <p>Diagrama de Refer\u00eancia: <code>/diagramas/sequencial/fluxo-distribuicao-leads.puml</code></p> <p></p> <p>Passos do Fluxo:</p> <ol> <li> <p>Origem (Zoho CRM):</p> </li> <li> <p>Um novo lead \u00e9 criado ou atribu\u00eddo \u00e0 montadora no Zoho CRM.</p> </li> <li>Gatilho: Um Webhook configurado no Zoho CRM \u00e9 acionado pelo evento de cria\u00e7\u00e3o/atualiza\u00e7\u00e3o do lead.</li> <li> <p>Gateway de Ingest\u00e3o (Fun\u00e7\u00e3o Serverless):</p> </li> <li> <p>O Webhook envia uma requisi\u00e7\u00e3o HTTP POST para um endpoint de API exposto por uma Fun\u00e7\u00e3o Serverless (ex: AWS Lambda + API Gateway).</p> </li> <li>Esta fun\u00e7\u00e3o \u00e9 respons\u00e1vel por:<ul> <li>Valida\u00e7\u00e3o Inicial: Verifica a autenticidade da requisi\u00e7\u00e3o (ex: usando um segredo compartilhado).</li> <li>Transforma\u00e7\u00e3o M\u00ednima: Converte o payload do webhook em um formato de evento padronizado (ex: CloudEvents).</li> <li>Publica\u00e7\u00e3o: Publica o evento <code>LeadDistribuicaoSolicitada</code> em um t\u00f3pico espec\u00edfico no Broker de Mensagens (ex: RabbitMQ).</li> </ul> </li> <li> <p>Broker de Mensagens (RabbitMQ/Kafka):</p> </li> <li> <p>O evento \u00e9 recebido e enfileirado de forma dur\u00e1vel, garantindo que n\u00e3o seja perdido mesmo que os servi\u00e7os consumidores estejam temporariamente indispon\u00edveis.</p> </li> <li> <p>Servi\u00e7o de Roteamento de Leads (Consumidor):</p> </li> <li> <p>Um microservi\u00e7o ou fun\u00e7\u00e3o serverless consumidor assina o t\u00f3pico <code>LeadDistribuicaoSolicitada</code>.</p> </li> <li>Ao receber um evento, este servi\u00e7o executa a l\u00f3gica de neg\u00f3cio principal:<ul> <li>An\u00e1lise e Enriquecimento: Consulta o banco de dados do portal ou outras fontes para obter as regras de distribui\u00e7\u00e3o (ex: por regi\u00e3o geogr\u00e1fica, por produto, etc.).</li> <li>Sele\u00e7\u00e3o da Concession\u00e1ria: Determina para qual concession\u00e1ria o lead deve ser enviado.</li> <li>Transforma\u00e7\u00e3o de Dados: Mapeia os campos do lead do formato da montadora para o formato esperado pelo CRM da concession\u00e1ria de destino.</li> </ul> </li> <li> <p>Destino (CRM da Concession\u00e1ria):</p> </li> <li> <p>O Servi\u00e7o de Roteamento realiza uma chamada de API (REST/SOAP) para o endpoint do CRM da concession\u00e1ria, enviando os dados do lead.</p> </li> <li>O CRM da concession\u00e1ria processa a requisi\u00e7\u00e3o e cria o novo lead.</li> <li> <p>Atualiza\u00e7\u00e3o de Status (Feedback Loop):</p> </li> <li> <p>Ap\u00f3s a confirma\u00e7\u00e3o da cria\u00e7\u00e3o do lead no CRM da concession\u00e1ria, o Servi\u00e7o de Roteamento pode, opcionalmente, publicar um novo evento, como <code>LeadDistribuidoComSucesso</code>.</p> </li> <li>Este evento pode ser consumido por outros servi\u00e7os para, por exemplo, atualizar o status do lead no portal web, notificando que ele foi enviado com sucesso.</li> </ol>"},{"location":"fluxo-de-dados/#2-fluxo-de-atualizacao-de-oportunidade","title":"2. Fluxo de Atualiza\u00e7\u00e3o de Oportunidade","text":"<p>Este fluxo descreve como uma atualiza\u00e7\u00e3o de oportunidade realizada no Zoho CRM dispara um processo ass\u00edncrono e orientado a eventos para replicar a mudan\u00e7a em um sistema externo. A arquitetura utiliza webhooks, uma API produtora e um sistema de filas para garantir o desacoplamento e a resili\u00eancia.</p> <p>Diagrama de Refer\u00eancia: <code>/diagramas/sequencial/fluxo-atualizacao-oportunidade.puml</code></p> <p></p> <p>Etapas do Fluxo:</p> <ol> <li>In\u00edcio no CRM: O processo come\u00e7a quando um Usu\u00e1rio modifica uma oportunidade diretamente na interface do Zoho CRM.</li> <li>Gatilho do Motor de Regras: A a\u00e7\u00e3o do usu\u00e1rio aciona o Motor de Regras interno do CRM (configurado como uma Workflow Rule). Esta regra \u00e9 configurada para monitorar altera\u00e7\u00f5es espec\u00edficas, como a mudan\u00e7a de est\u00e1gio de uma oportunidade.</li> <li>Disparo do Webhook: Uma vez que a condi\u00e7\u00e3o da regra \u00e9 satisfeita, o CRM dispara um Webhook. Trata-se de uma notifica\u00e7\u00e3o HTTP POST enviada para um endpoint externo, contendo os dados da oportunidade que foi atualizada. Este processo \u00e9 ass\u00edncrono, permitindo que a interface do CRM confirme a a\u00e7\u00e3o para o usu\u00e1rio imediatamente, sem aguardar o processamento final.</li> <li> <p>Recep\u00e7\u00e3o e Enfileiramento: O webhook \u00e9 recebido pela API Producer. Este \u00e9 um servi\u00e7o leve cuja responsabilidade \u00e9:</p> </li> <li> <p>Validar a chamada do webhook (ex: checar tokens de seguran\u00e7a).</p> </li> <li>Formatar os dados recebidos em uma mensagem padronizada.</li> <li>Publicar a mensagem na Fila de Atualiza\u00e7\u00e3o de Oportunidade.</li> <li>Processamento Ass\u00edncrono: O Servi\u00e7o Consumidor, um componente independente que monitora constantemente a fila, detecta e l\u00ea a nova mensagem.</li> <li>Atualiza\u00e7\u00e3o da Base de Dados: O Consumidor processa a mensagem, aplica qualquer l\u00f3gica de neg\u00f3cio necess\u00e1ria e, por fim, atualiza as informa\u00e7\u00f5es no Banco de Dados central do sistema de destino.</li> </ol> <p>Vantagens desta Arquitetura:</p> <ul> <li>Desacoplamento: O Zoho CRM n\u00e3o precisa saber nada sobre a arquitetura do sistema de destino. Sua \u00fanica responsabilidade \u00e9 enviar uma notifica\u00e7\u00e3o para um endere\u00e7o web.</li> <li>Resili\u00eancia: Se o Servi\u00e7o Consumidor ou o banco de dados estiverem temporariamente indispon\u00edveis, as mensagens se acumulam na fila e s\u00e3o processadas assim que o servi\u00e7o for restaurado, evitando a perda de dados.</li> <li>Escalabilidade: Se o volume de atualiza\u00e7\u00f5es aumentar, \u00e9 poss\u00edvel adicionar mais inst\u00e2ncias do Servi\u00e7o Consumidor para processar as mensagens da fila em paralelo.</li> </ul>"},{"location":"funcionalidades/","title":"Documento de Funcionalidades do Portal Web","text":"<p>Este documento descreve as funcionalidades planejadas para o portal web, que ser\u00e1 utilizado pelas concession\u00e1rias. O portal ser\u00e1 desenvolvido como um microservi\u00e7o, conforme o ADR-001.</p>"},{"location":"funcionalidades/#1-autenticacao-e-gestao-de-acessos","title":"1. Autentica\u00e7\u00e3o e Gest\u00e3o de Acessos","text":"<p>Para detalhes sobre a gest\u00e3o de tokens de API, consulte o diagrama de componentes espec\u00edfico:</p> <p><code>Diagrama de Componentes para o Componente de Gest\u00e3o de Tokens de API (PUML)</code></p> <p></p> <p>F-001: Login de Usu\u00e1rio *   Os usu\u00e1rios das concession\u00e1rias poder\u00e3o fazer login no portal usando um e-mail e senha. *   O sistema deve incluir uma funcionalidade de \"Esqueci minha senha\".</p> <p>F-002: Gest\u00e3o de Tokens de API *   Cada concession\u00e1ria ter\u00e1 uma \u00e1rea de administra\u00e7\u00e3o onde poder\u00e1 gerar, visualizar e revogar tokens de API. *   Esses tokens ser\u00e3o usados para autenticar as chamadas de webhook do CRM da concession\u00e1ria para a plataforma de integra\u00e7\u00e3o, garantindo que apenas fontes autorizadas possam enviar dados.</p> <p>F-003: Controle de Acesso Baseado em Papel (RBAC) *   O sistema suportar\u00e1 pelo menos dois pap\u00e9is de usu\u00e1rio:     *   Admin da Concession\u00e1ria: Pode gerenciar usu\u00e1rios, visualizar todos os leads/oportunidades da sua concession\u00e1ria e gerenciar tokens de API.     *   Usu\u00e1rio Padr\u00e3o: Pode visualizar os leads/oportunidades que lhe foram atribu\u00eddos.</p>"},{"location":"funcionalidades/#2-visualizacao-de-dados","title":"2. Visualiza\u00e7\u00e3o de Dados","text":"<p>F-004: Dashboard de Leads e Oportunidades *   A p\u00e1gina inicial ap\u00f3s o login ser\u00e1 um dashboard que exibe uma vis\u00e3o geral dos leads recebidos e o status atual das oportunidades. *   Os dados ser\u00e3o apresentados em formato de lista ou kanban, permitindo uma visualiza\u00e7\u00e3o clara do funil de vendas.</p> <p>F-005: Filtragem e Busca *   Os usu\u00e1rios poder\u00e3o filtrar a lista de leads/oportunidades por status, data de cria\u00e7\u00e3o, vendedor respons\u00e1vel, etc. *   Uma funcionalidade de busca permitir\u00e1 encontrar rapidamente um lead ou oportunidade espec\u00edfica.</p> <p>F-006: Detalhes da Oportunidade *   Ao clicar em um item, o usu\u00e1rio poder\u00e1 ver uma tela de detalhes com todas as informa\u00e7\u00f5es do lead/oportunidade, incluindo o hist\u00f3rico de atualiza\u00e7\u00f5es de status. *   Esta tela exibir\u00e1 o status de sincroniza\u00e7\u00e3o, indicando se a informa\u00e7\u00e3o foi enviada com sucesso para a montadora.</p>"},{"location":"funcionalidades/#3-documentacao-de-api","title":"3. Documenta\u00e7\u00e3o de API","text":"<p>F-007: Portal de Documenta\u00e7\u00e3o *   O portal web incluir\u00e1 uma se\u00e7\u00e3o dedicada \u00e0 documenta\u00e7\u00e3o das APIs de integra\u00e7\u00e3o. *   A documenta\u00e7\u00e3o explicar\u00e1 como configurar os webhooks nos CRMs das concession\u00e1rias, qual o formato esperado dos payloads e quais os endpoints a serem chamados. *   Idealmente, esta documenta\u00e7\u00e3o ser\u00e1 gerada automaticamente a partir de uma especifica\u00e7\u00e3o OpenAPI (Swagger).</p>"},{"location":"funcionalidades/#4-relatorios-funcionalidade-futura","title":"4. Relat\u00f3rios (Funcionalidade Futura)","text":"<p>F-008: Relat\u00f3rios de Performance *   Em uma fase futura, o portal poder\u00e1 oferecer relat\u00f3rios b\u00e1sicos sobre a taxa de convers\u00e3o de leads, tempo m\u00e9dio por est\u00e1gio do funil, etc., para ajudar as concession\u00e1rias a analisar sua performance.</p>"},{"location":"license/","title":"Licen\u00e7a","text":""},{"location":"license/#mit-license","title":"MIT License","text":"<p>Copyright (c) 2025 Edson L B Filho</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"seguranca/","title":"Documento de Estrat\u00e9gia de Seguran\u00e7a","text":"<p>Este documento descreve as medidas de seguran\u00e7a para a autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o no sistema, com foco no Portal Web e na integra\u00e7\u00e3o de APIs, conforme o ADR-001.</p>"},{"location":"seguranca/#1-autenticacao-no-portal-web","title":"1. Autentica\u00e7\u00e3o no Portal Web","text":"<p>SEC-001: Autentica\u00e7\u00e3o de Usu\u00e1rios com JWT</p> <ul> <li>Mecanismo: A autentica\u00e7\u00e3o dos usu\u00e1rios no portal web ser\u00e1 baseada em JSON Web Tokens (JWT).</li> <li>Fluxo:<ol> <li>O usu\u00e1rio envia suas credenciais (e-mail e senha) para um endpoint de login (<code>/api/auth/login</code>).</li> <li>O servi\u00e7o de autentica\u00e7\u00e3o valida as credenciais no banco de dados.</li> <li>Se as credenciais forem v\u00e1lidas, o servi\u00e7o gera um Access Token (JWT de curta dura\u00e7\u00e3o, ex: 15 minutos) e um Refresh Token (de longa dura\u00e7\u00e3o, ex: 7 dias).</li> <li>O Access Token \u00e9 enviado de volta ao cliente e armazenado em mem\u00f3ria (ex: state de uma SPA). Ele ser\u00e1 inclu\u00eddo no cabe\u00e7alho <code>Authorization</code> de cada requisi\u00e7\u00e3o para acessar rotas protegidas.</li> <li>O Refresh Token \u00e9 armazenado de forma segura no cliente (ex: em um cookie HTTP-Only) e usado para obter um novo Access Token quando o antigo expirar, sem exigir que o usu\u00e1rio fa\u00e7a login novamente.</li> </ol> </li> </ul>"},{"location":"seguranca/#2-autorizacao-no-portal-web","title":"2. Autoriza\u00e7\u00e3o no Portal Web","text":"<p>SEC-002: Controle de Acesso Baseado em Papel (RBAC)</p> <ul> <li>Mecanismo: A autoriza\u00e7\u00e3o ser\u00e1 implementada usando um sistema de pap\u00e9is (Roles).</li> <li>Implementa\u00e7\u00e3o:<ul> <li>O payload do JWT (Access Token) conter\u00e1 as informa\u00e7\u00f5es do papel do usu\u00e1rio (ex: <code>\"role\": \"admin_concessionaria\"</code>).</li> <li>O backend (API do portal) ter\u00e1 um middleware que decodifica o JWT a cada requisi\u00e7\u00e3o e verifica se o papel do usu\u00e1rio tem permiss\u00e3o para acessar o recurso solicitado.</li> <li>Isso garante que um usu\u00e1rio padr\u00e3o n\u00e3o possa acessar rotas de administra\u00e7\u00e3o, como a gest\u00e3o de tokens de API.</li> </ul> </li> </ul>"},{"location":"seguranca/#3-autenticacao-das-integracoes-webhooks","title":"3. Autentica\u00e7\u00e3o das Integra\u00e7\u00f5es (Webhooks)","text":"<p>Para uma vis\u00e3o detalhada do fluxo de autentica\u00e7\u00e3o de webhooks, consulte o diagrama abaixo:</p> <p><code>Fluxo de Seguran\u00e7a: Autentica\u00e7\u00e3o de Webhooks (PUML)</code></p> <p></p> <p>SEC-003: Autentica\u00e7\u00e3o de Webhooks com Tokens de API</p> <ul> <li>Mecanismo: As chamadas de webhook provenientes dos CRMs (tanto da montadora quanto das concession\u00e1rias) devem ser autenticadas para garantir que apenas fontes leg\u00edtimas possam enviar dados para a plataforma.</li> <li>Implementa\u00e7\u00e3o:<ol> <li>Gera\u00e7\u00e3o do Token: Um administrador da concession\u00e1ria gera um token de API \u00fanico e secreto atrav\u00e9s do portal web.</li> <li>Configura\u00e7\u00e3o do Webhook: Ao configurar o webhook no CRM da concession\u00e1ria, este token \u00e9 inclu\u00eddo em um cabe\u00e7alho HTTP customizado (ex: <code>X-API-Key</code>).</li> <li>Valida\u00e7\u00e3o no Gateway: O Gateway de Ingest\u00e3o (Fun\u00e7\u00e3o Serverless) que recebe a chamada do webhook \u00e9 respons\u00e1vel por:<ul> <li>Extrair o token do cabe\u00e7alho.</li> <li>Validar o token contra um banco de dados seguro (ex: Hashicorp Vault ou um servi\u00e7o de segredos da nuvem como AWS Secrets Manager).</li> <li>Se o token for v\u00e1lido e ativo, a requisi\u00e7\u00e3o \u00e9 processada. Caso contr\u00e1rio, \u00e9 rejeitada com um status <code>401 Unauthorized</code>.</li> </ul> </li> </ol> </li> </ul> <p>SEC-004: Prote\u00e7\u00e3o Adicional com Segredos Compartilhados (Opcional)</p> <ul> <li>Para webhooks que suportam, como o do Zoho, um segredo compartilhado pode ser usado para verificar a assinatura da carga \u00fatil (payload), garantindo que o corpo da requisi\u00e7\u00e3o n\u00e3o foi alterado em tr\u00e2nsito (verifica\u00e7\u00e3o de integridade).</li> </ul>"},{"location":"seguranca/#4-seguranca-geral","title":"4. Seguran\u00e7a Geral","text":"<p>SEC-005: Comunica\u00e7\u00e3o Segura com HTTPS *   Toda a comunica\u00e7\u00e3o entre clientes, portais e APIs deve ser obrigatoriamente feita sobre HTTPS (TLS) para criptografar os dados em tr\u00e2nsito.</p> <p>SEC-006: Armazenamento de Senhas *   As senhas dos usu\u00e1rios no banco de dados do portal devem ser armazenadas usando um algoritmo de hashing forte e com salt (ex: bcrypt ou Argon2).</p>"},{"location":"sobre/","title":"Edson Lourenco","text":"<p>Profissional de tecnologia da informa\u00e7\u00e3o desde 2005 , com experi\u00eancia em levantamento de requisitos, desenvolvimento de software e arquitetura de solu\u00e7\u00f5es. Ele \u00e9 formado em An\u00e1lise e Desenvolvimento de Sistemas pela UNIESP.</p>"},{"location":"sobre/#objetivo-profissional","title":"Objetivo Profissional","text":"<p>Meu objetivo \u00e9 aplicar o conhecimentos adquiridos para impulsionar efici\u00eancia e crescimento, buscando entregar resultados que excedam as expectativas. Foco na constru\u00e7\u00e3o de sistemas escal\u00e1veis e de alto desempenho e utiliza pr\u00e1ticas de observabilidade para garantir a qualidade das entregas e a estabilidade dos sistemas em produ\u00e7\u00e3o.</p>"},{"location":"sobre/#competencias-tecnicas-principais","title":"Compet\u00eancias T\u00e9cnicas Principais","text":"<p>Expertise t\u00e9cnica em desenvolvimento Full Stack com foco em Python, combinando conhecimentos em PHP, Swift e Node.js para entregas em Backend e Mobile. Sua experi\u00eancia s\u00f3lida abrange:</p> <ul> <li>Arquitetura de microsservi\u00e7os e solu\u00e7\u00f5es event-driven </li> <li>Infraestrutura AWS e computa\u00e7\u00e3o em nuvem (AWS, GCP e Azure) </li> <li>Bancos de dados SQL e NoSQL (MySQL, PostgreSQL, MongoDB, Redis, DynamoDB)</li> <li>DevOps com implementa\u00e7\u00e3o de pipelines CI/CD</li> <li>Processamento de dados em larga escala e sistemas ETL </li> <li>Desenvolvimento de RPAs e automa\u00e7\u00e3o de processos </li> <li>Atendimento Chatbots </li> <li>APIs RESTful, gRPC e GraphQL </li> <li>Frameworks Python: Django, Flask e FastAPI </li> <li>Desenvolvimento Mobile (iOS com Swift e UIKit, Android com Kotlin)</li> <li>Desenvolvimento Web (HTML, CSS, JavaScript, TypeScript)</li> <li>Frameworks Web (Laravel, Spring Boot, Express.js, Nest.js) </li> </ul>"},{"location":"sobre/#experiencias-relevantes","title":"Experi\u00eancias Relevantes","text":"<ul> <li>Simple Energy: Liderou o desenvolvimento de solu\u00e7\u00f5es ETL, processando mais de 65 mil arquivos de faturamento mensais para o setor energ\u00e9tico brasileiro. Tamb\u00e9m implementou pipelines de CI/CD na AWS, otimizando o ciclo de desenvolvimento e aumentando a confiabilidade das entregas.</li> <li>C6 Bank (Tech Analyst iOS): No time de Seguran\u00e7a e Fraudes \u00e9ramos respons\u00e1veis pela implementa\u00e7\u00e3o de solu\u00e7\u00f5es utilizando Swift e integra\u00e7\u00f5es backend Kotlin em FaceID e Local seguro.</li> <li>Projeto Inovador (Simuladores de Automobilismo Virtual): Desenvolveu um projeto de hardware e software que demonstrou excelente performance em testes de stress no evento SPJAM 2015 (PUC-SP), operando continuamente por mais de 48 horas, surgindo o projeto ITS3 Simuladores.</li> </ul>"},{"location":"adrs/arquitetura-geral/","title":"ADR-001: Escolha da Arquitetura H\u00edbrida (Microservi\u00e7os + Orientada a Eventos/Serverless)","text":"<p>Este Documento de Decis\u00e3o de Arquitetura (ADR) \u00e9 uma demonstra\u00e7\u00e3o pr\u00e1tica das minhas habilidades em arquitetura de software e desenvolvimento. Ele apresenta uma proposta de arquitetura h\u00edbrida, combinando microservi\u00e7os com abordagens orientadas a eventos e Serverless, para um cen\u00e1rio hipot\u00e9tico.</p>"},{"location":"adrs/arquitetura-geral/#1-status","title":"1. Status","text":"<p>Proposta</p> <p>Data: 2025-07-22 Respons\u00e1vel: Edson L Bezerra Filho</p>"},{"location":"adrs/arquitetura-geral/#2-contexto","title":"2. Contexto","text":"<p>O desafio envolve projetar uma arquitetura de integra\u00e7\u00e3o entre o Zoho CRM de uma montadora e CRMs de diversas concession\u00e1rias. Os requisitos prim\u00e1rios s\u00e3o:</p> <ul> <li>Distribui\u00e7\u00e3o autom\u00e1tica de leads da montadora para as concession\u00e1rias.</li> <li>Atualiza\u00e7\u00e3o autom\u00e1tica do est\u00e1gio da oportunidade do CRM da concession\u00e1ria para o Zoho CRM da montadora.</li> <li>Cria\u00e7\u00e3o de um portal web que permita \u00e0s concession\u00e1rias visualizar leads/oportunidades, gerenciar acessos e tokens, e consultar a documenta\u00e7\u00e3o das APIs.</li> </ul> <p>H\u00e1 uma forte prefer\u00eancia por uma arquitetura que ofere\u00e7a desassocia\u00e7\u00e3o de nuvem/plataforma e otimiza\u00e7\u00e3o de custos sem comprometer a performance.</p>"},{"location":"adrs/arquitetura-geral/#3-decisao","title":"3. Decis\u00e3o","text":"<p>A arquitetura geral da solu\u00e7\u00e3o ser\u00e1 H\u00edbrida, combinando Microservi\u00e7os para o Portal Web e uma abordagem Orientada a Eventos com componentes Serverless para os fluxos de integra\u00e7\u00e3o (distribui\u00e7\u00e3o de leads e atualiza\u00e7\u00e3o de oportunidades).</p>"},{"location":"adrs/arquitetura-geral/#31-detalhes-da-decisao","title":"3.1. Detalhes da Decis\u00e3o","text":""},{"location":"adrs/arquitetura-geral/#portal-web-microservico","title":"Portal Web (Microservi\u00e7o):","text":"<ul> <li>Ser\u00e1 implementado como um microservi\u00e7o aut\u00f4nomo.</li> <li>Tecnologias sugeridas: Python com o framework Django.</li> <li>Funcionalidades Principais: Servir a interface de usu\u00e1rio para concession\u00e1rias, gerenciar autentica\u00e7\u00e3o/autoriza\u00e7\u00e3o, exibi\u00e7\u00e3o de leads e oportunidades, e disponibiliza\u00e7\u00e3o de documenta\u00e7\u00e3o de APIs.</li> <li>Implanta\u00e7\u00e3o: Provavelmente via cont\u00eaineres (Docker) orquestrados (Kubernetes ou servi\u00e7o similar na nuvem) para garantir portabilidade e escalabilidade.</li> </ul>"},{"location":"adrs/arquitetura-geral/#fluxos-de-integracao-orientada-a-eventos-com-serverless","title":"Fluxos de Integra\u00e7\u00e3o (Orientada a Eventos com Serverless):","text":"<ul> <li>Captura de Eventos: Utiliza\u00e7\u00e3o de webhooks ou APIs RESTful nos CRMs de origem (Zoho CRM e CRMs das concession\u00e1rias) para disparar eventos de altera\u00e7\u00e3o de leads e oportunidades.</li> <li>Ingest\u00e3o e Publica\u00e7\u00e3o em Mensageria: Estes eventos ser\u00e3o capturados por fun\u00e7\u00f5es serverless (ex: AWS Lambda, Oracle Functions, ou Azure Functions) que atuar\u00e3o como gateways de entrada. Essas fun\u00e7\u00f5es far\u00e3o uma valida\u00e7\u00e3o e transforma\u00e7\u00e3o m\u00ednima, e ent\u00e3o publicar\u00e3o uma mensagem formatada em um Broker de Mensagens (ex: RabbitMQ, Kafka).</li> <li>Processamento de Eventos: Outros microservi\u00e7os ou fun\u00e7\u00f5es serverless consumidores ser\u00e3o respons\u00e1veis por consumir as mensagens do broker, aplicar a l\u00f3gica de neg\u00f3cio espec\u00edfica (transforma\u00e7\u00e3o de dados, valida\u00e7\u00f5es complexas, roteamento para concession\u00e1rias espec\u00edficas) e, finalmente, atualizar o sistema de destino (Zoho CRM ou CRM da concession\u00e1ria).</li> <li>Implanta\u00e7\u00e3o: Fun\u00e7\u00f5es serverless gerenciadas pelo provedor de nuvem para a ingest\u00e3o, e microservi\u00e7os/fun\u00e7\u00f5es serverless para os consumidores, permitindo escalabilidade autom\u00e1tica e pagamento por uso.</li> </ul>"},{"location":"adrs/arquitetura-geral/#4-alternativas-consideradas","title":"4. Alternativas Consideradas","text":""},{"location":"adrs/arquitetura-geral/#arquitetura-baseada-exclusivamente-em-microservicos","title":"Arquitetura Baseada Exclusivamente em Microservi\u00e7os:","text":"<p>Pr\u00f3s: Alta modularidade, flexibilidade tecnol\u00f3gica, escalabilidade independente, resili\u00eancia.</p> <p>Contras: Maior complexidade operacional para todo o sistema (incluindo gest\u00e3o de infraestrutura para microservi\u00e7os de integra\u00e7\u00e3o), poss\u00edvel lat\u00eancia em comunica\u00e7\u00f5es s\u00edncronas entre servi\u00e7os, gerenciamento de consist\u00eancia de dados distribu\u00eddos em cen\u00e1rios transacionais s\u00edncronos.</p>"},{"location":"adrs/arquitetura-geral/#arquitetura-exclusivamente-serverless","title":"Arquitetura Exclusivamente Serverless:","text":"<p>Pr\u00f3s: Redu\u00e7\u00e3o de custos operacionais (pay-as-you-go), escalabilidade autom\u00e1tica, foco no c\u00f3digo.</p> <p>Contras: Potenciais \"cold starts\" para todas as funcionalidades (incluindo o portal web, que requer resposta r\u00e1pida), poss\u00edveis limita\u00e7\u00f5es de recursos, maior vendor lock-in (para a camada de computa\u00e7\u00e3o serverless), complexidade maior para o desenvolvimento de um portal web interativo.</p>"},{"location":"adrs/arquitetura-geral/#arquitetura-exclusivamente-orientada-a-eventos-eda","title":"Arquitetura Exclusivamente Orientada a Eventos (EDA):","text":"<p>Pr\u00f3s: Desacoplamento forte, resili\u00eancia natural, escalabilidade horizontal, excelente para fluxos ass\u00edncronos.</p> <p>Contras: A complexidade de implementar um portal web interativo e funcional inteiramente baseado em eventos seria excessiva. Rastreamento e depura\u00e7\u00e3o podem ser mais complexos sem uma vis\u00e3o s\u00edncrona para partes do sistema.</p>"},{"location":"adrs/arquitetura-geral/#5-justificativa","title":"5. Justificativa","text":"<p>A decis\u00e3o pela Arquitetura H\u00edbrida seria a mais adequada por otimizar os pontos fortes das diferentes abordagens, mitigando suas fraquezas no contexto espec\u00edfico do desafio.</p>"},{"location":"adrs/arquitetura-geral/#melhor-ajuste-aos-requisitos","title":"Melhor Ajuste aos Requisitos:","text":"<p>O portal web se beneficia da estabilidade e familiaridade de um microservi\u00e7o tradicional, enquanto os fluxos de integra\u00e7\u00e3o se alinham perfeitamente com a natureza ass\u00edncrona e escal\u00e1vel de eventos e serverless.</p>"},{"location":"adrs/arquitetura-geral/#otimizacao-de-custos-e-performance","title":"Otimiza\u00e7\u00e3o de Custos e Performance:","text":"<p>O uso de serverless para eventos garante que os custos sejam proporcionais ao uso, ideal para picos e vales de tr\u00e1fego de leads e atualiza\u00e7\u00f5es.</p> <p>O microservi\u00e7o do portal pode ser dimensionado de forma mais previs\u00edvel, mantendo uma performance de resposta consistente para os usu\u00e1rios.</p>"},{"location":"adrs/arquitetura-geral/#desassociacao-de-nuvemplataforma","title":"Desassocia\u00e7\u00e3o de Nuvem/Plataforma:","text":"<p>O microservi\u00e7o do portal pode ser empacotado em cont\u00eaineres e implantado em qualquer ambiente compat\u00edvel com Docker/Kubernetes, garantindo alta portabilidade.</p> <p>Para a camada de integra\u00e7\u00e3o, embora as fun\u00e7\u00f5es serverless sejam espec\u00edficas da nuvem, a l\u00f3gica de neg\u00f3cio encapsulada nelas pode ser mais port\u00e1vel. A escolha de um broker de mensagens amplamente adotado (como RabbitMQ ou Kafka) atua como uma camada de abstra\u00e7\u00e3o crucial, permitindo que os servi\u00e7os n\u00e3o dependam diretamente de implementa\u00e7\u00f5es de fila espec\u00edficas de um provedor de nuvem.</p>"},{"location":"adrs/arquitetura-geral/#resiliencia-e-escalabilidade","title":"Resili\u00eancia e Escalabilidade:","text":"<p>A natureza ass\u00edncrona e o desacoplamento promovidos pela EDA para as integra\u00e7\u00f5es aumentam significativamente a resili\u00eancia do sistema a falhas tempor\u00e1rias e permitem uma escalabilidade massiva para lidar com grandes volumes de dados.</p>"},{"location":"adrs/arquitetura-geral/#6-consequencias","title":"6. Consequ\u00eancias","text":""},{"location":"adrs/arquitetura-geral/#positivas","title":"Positivas:","text":"<p>Otimiza\u00e7\u00e3o de Recursos: Aloca recursos de computa\u00e7\u00e3o de forma eficiente para cada parte da solu\u00e7\u00e3o, resultando em um melhor custo-benef\u00edcio geral.</p> <p>Alta Disponibilidade e Resili\u00eancia: Falhas em uma parte do sistema de integra\u00e7\u00e3o (ex: um consumidor de eventos) n\u00e3o necessariamente interrompem o fluxo de dados em outras partes.</p> <p>Flexibilidade para Evolu\u00e7\u00e3o: A modularidade dos microservi\u00e7os e o desacoplamento da EDA facilitam a adi\u00e7\u00e3o de novas funcionalidades ou a modifica\u00e7\u00e3o das existentes sem impactar todo o sistema.</p> <p>Melhor Experi\u00eancia do Usu\u00e1rio no Portal: O microservi\u00e7o dedicado ao portal pode ser otimizado para responder rapidamente \u00e0s intera\u00e7\u00f5es do usu\u00e1rio.</p>"},{"location":"adrs/arquitetura-geral/#negativas","title":"Negativas:","text":"<p>Complexidade de Monitoramento: Rastrear o fluxo de dados atrav\u00e9s de m\u00faltiplos componentes (portal, fun\u00e7\u00f5es serverless, broker de mensagens, consumidores) exigir\u00e1 ferramentas robustas de Observabilidade (APM, logs centralizados, tracing distribu\u00eddo).</p> <p>Consist\u00eancia Eventual: Para os dados que trafegam via eventos, a consist\u00eancia ser\u00e1 eventual, o que significa que pode haver um pequeno atraso at\u00e9 que as informa\u00e7\u00f5es sejam completamente propagadas entre todos os sistemas. Isso deve ser comunicado e gerenciado na interface do portal.</p> <p>Curva de Aprendizado: A equipe pode precisar de profici\u00eancia tanto em desenvolvimento de microservi\u00e7os/web quanto em padr\u00f5es de arquitetura orientada a eventos e serverless.</p>"}]}